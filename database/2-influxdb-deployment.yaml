# 2-influxdb-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb
  namespace: connected-kiln
  labels:
    app: influxdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: influxdb
  template:
    metadata:
      labels:
        app: influxdb
    spec:
      securityContext:
        # This is the pod-level securityContext
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: influxdb
          image: influxdb:2.7 # Using InfluxDB 2.x
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            capabilities:
              drop: [ "ALL" ]
            readOnlyRootFilesystem: false
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 8086
          env:
            - name: DOCKER_INFLUXDB_INIT_MODE
              value: setup
            - name: DOCKER_INFLUXDB_INIT_USERNAME
              value: influxadmin
            - name: DOCKER_INFLUXDB_INIT_PASSWORD
              value: "" # <<-- CHANGE THIS PASSWORD
            - name: DOCKER_INFLUXDB_INIT_ORG
              value: connected-kiln-org
            - name: DOCKER_INFLUXDB_INIT_BUCKET
              value: kiln_metrics # This will be the bucket Telegraf writes to
            - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
              value: "pk-8RKW5_9DHvT9KnM-dnfzkzXl4NEI7G5HG2yEBTp2hTfMoRp2qZKWOHGgix_z1fzhHlq3tar0DJYyXkYSLiw=="
          volumeMounts:
            - name: influxdb-storage
              mountPath: /var/lib/influxdb2
      volumes:
        - name: influxdb-storage
          persistentVolumeClaim:
            claimName: influxdb-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: influxdb-service
  namespace: connected-kiln
spec:
  selector:
    app: influxdb
  ports:
    - port: 8086
      targetPort: 8086
  type: ClusterIP # Only accessible from inside the cluster